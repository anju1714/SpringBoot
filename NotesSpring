why we use SpringBoot?
Simplified Spring Development
Quick Project Setup
Embedded Servers (Tomcat, Jetty, Undertow)
Microservices Support
Auto Configuration
Production-Ready Features (Monitoring, Health Checks)
Standalone Applications (No need for external servers)
Easy Dependency Management
Integrated Security (Spring Security)
Minimal XML Configuration
Built-in Testing Support
Active and Large Community Support


Q2 ] How to use Spring in our project ===> Spring Initialize , Spring tool suit (STS) , Download Plungins in Our IDE for exampl eEclips =
install a extention in eclips and once u done with a that go to New-> file-> type spring-> them we get out Spring Starter project  .

name = demo
group = com.anjali
artifact = demo
com.anjali.demo
after that our spring boot pe]roject is ready then we can able to do multiple confuguration 

for exmpl i want to show data on browse so we can do very simply by using spring boot 
i create a one project for this name (aj)

@ 3] What is the use of application.properties file in Spring Boot]

Database Configuration

Connection details for the database.
Server Configuration

Application port settings.
Logging Configuration

Logging levels for packages and loggers.
Profiles and Environment Settings

Active Spring profiles for different environments.
Email Configuration

SMTP settings for sending emails.
Security Configuration

Security settings like username and password.
Hibernate and JPA Settings

JPA and Hibernate configuration properties.
Custom Application Properties

Custom properties for application use.
Internationalization (i18n)

Message source and encoding settings.
===================================================

Q 4 ]  what is jpa spring boot ? 
=> jpa is work as ORM in backend we can comnicTE WITH DATABSE IN SIMPLE WAY 
JPA (Java Persistence API) is a specification that defines how to map Java objects to relational database tables and manage data persistence.
It allows developers to perform CRUD operations without writing SQL queries, 
using an ORM framework like Hibernate to handle the database interactions.






